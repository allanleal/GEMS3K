
####### Compiler, tools and options

CC		=	gcc
CXX		=	g++
LEX		= flex
YACC		= byacc
CFLAGS	=	-Wall -g -fexceptions -frtti  -DUNICODE -DIPMGEMPLUGIN
CXXFLAGS	=	-Wall -g -fexceptions -frtti  -DUNICODE -DIPMGEMPLUGIN
LEXFLAGS	=
YACCFLAGS	=-d
INCPATH	=	 -I"." -I".." -I"." 
LINK	=	g++
LFLAGS	=	-Wl,-enable-stdcall-fixup -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc -Wl,-subsystem,console
LIBS	=	-lkernel32 -luser32 -lgdi32 -lcomdlg32 -ladvapi32 -lshell32 -lole32 -loleaut32 -luuid -limm32 -lwinmm -lwsock32 -lwinspool
ZIP		=	zip -r -9
DEF_FILE      =	
COPY_FILE	=       copy
COPY_DIR	=       copy
DEL_FILE	=       del
DEL_DIR	=       rmdir
MOVE		=       move
CHK_DIR_EXISTS =	if not exist
MKDIR		=	mkdir
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)

####### Output directory

OBJECTS_DIR = . 
MOC_DIR = . 

####### Files

HEADERS =	s_pitzer.h \
		..\verror.h \
		..\array.h \
		..\v_user.h \
		..\gstring.h
SOURCES =	s_pitzer.cpp \
		..\gstring.cpp \
		main.cpp
OBJECTS =	s_pitzer.o \
		gstring.o \
		main.o
	
DIST	=	
TARGET	=	gempitz.exe

####### Implicit rules

.SUFFIXES: .cpp .cxx .cc .C .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: $(OBJECTS_DIR) $(TARGET)

$(TARGET):  $(OBJECTS)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS)

$(OBJECTS_DIR):
	@if not exist $(OBJECTS_DIR) $(MKDIR) $(OBJECTS_DIR)

dist:
	$(ZIP) .zip .pro $(SOURCES) $(HEADERS) $(DIST) $(FORMS)

clean:
	-$(DEL_FILE) s_pitzer.o
	-$(DEL_FILE) gstring.o
	-$(DEL_FILE) main.o
	-$(DEL_FILE) $(TARGET)


####### Compile

s_pitzer.o: s_pitzer.cpp ..\verror.h \
		s_pitzer.h \
		..\gstring.h \
		..\array.h

gstring.o: ..\gstring.cpp ..\gstring.h \
		..\v_user.h \
		..\array.h \
		..\verror.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gstring.o ..\gstring.cpp

main.o: main.cpp s_pitzer.h

####### Install

install:  

uninstall:  

