#############################################################################
# Makefile for building: gempitz
# Generated by qmake (2.01a) (Qt 4.4.0) on: Mon Dec 1 11:29:09 2008
# Project:  gem_pitz.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile gem_pitz.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DIPMGEMPLUGIN -D__unix
CFLAGS        = -m64 -pipe -g -Wall -W $(DEFINES)
CXXFLAGS      = -m64 -pipe -g -Wall -W $(DEFINES)
INCPATH       =  -I.. -I.
LINK          = g++
LFLAGS        = -m64
LIBS          = $(SUBLIBS)   
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = s_pitzer.cpp \
		../gstring.cpp \
		main.cpp 
OBJECTS       = s_pitzer.o \
		gstring.o \
		main.o
DESTDIR       = 
TARGET        = gempitz

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)


dist: 
	@$(CHK_DIR_EXISTS) .tmp/gempitz2.2.0 || $(MKDIR) .tmp/gempitz2.2.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/gempitz2.2.0/ && (cd `dirname .tmp/gempitz2.2.0` && $(TAR) gempitz2.2.0.tar gempitz2.2.0 && $(COMPRESS) gempitz2.2.0.tar) && $(MOVE) `dirname .tmp/gempitz2.2.0`/gempitz2.2.0.tar.gz . && $(DEL_FILE) -r .tmp/gempitz2.2.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


compiler_rcc_make_all:
compiler_rcc_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

s_pitzer.o: s_pitzer.cpp ../verror.h \
		../gstring.h \
		../array.h \
		s_pitzer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o s_pitzer.o s_pitzer.cpp

gstring.o: ../gstring.cpp ../gstring.h \
		../array.h \
		../v_user.h \
		../verror.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gstring.o ../gstring.cpp

main.o: main.cpp s_pitzer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

