#############################################################################
# Makefile for building: gempitz
# Generated by qmake (1.07a) (Qt 3.3.8) on: Thu Dec 11 13:38:35 2008
# Project:  gem_pitz.pro
# Template: app
# Command: $(QMAKE) -o Makefile gem_pitz.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc-4.3
CXX      = g++-4.3
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -g  -DIPMGEMPLUGIN -D__unix
CXXFLAGS = -pipe -Wall -W -g  -DIPMGEMPLUGIN -D__unix
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/home/gems/qt3/mkspecs/default -I. -I. -I..
LINK     = g++-4.3
LFLAGS   = 
LIBS     = $(SUBLIBS)  
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = ../s_fgl.h \
		../verror.h \
		../array.h \
		../v_user.h \
		../gstring.h
SOURCES = ../s_fgl.cpp \
		../s_fgl1.cpp \
		../s_fgl2.cpp \
		../s_fgl3.cpp \
		../s_fgl4.cpp \
		../gstring.cpp \
		main.cpp
OBJECTS = s_fgl.o \
		s_fgl1.o \
		s_fgl2.o \
		s_fgl3.o \
		s_fgl4.o \
		gstring.o \
		main.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = 
OBJMOC = 
DIST	   = gem_pitz.pro
QMAKE_TARGET = gempitz
DESTDIR  = 
TARGET   = gempitz

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: gem_pitz.pro  /home/gems/qt3/mkspecs/default/qmake.conf 
	$(QMAKE) -o Makefile gem_pitz.pro
qmake: 
	@$(QMAKE) -o Makefile gem_pitz.pro

dist: 
	@mkdir -p .tmp/gempitz && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/gempitz/ && ( cd `dirname .tmp/gempitz` && $(TAR) gempitz.tar gempitz && $(GZIP) gempitz.tar ) && $(MOVE) `dirname .tmp/gempitz`/gempitz.tar.gz . && $(DEL_FILE) -r .tmp/gempitz

mocclean:
uiclean:

yaccclean:
lexclean:
clean:
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

s_fgl.o: ../s_fgl.cpp ../s_fgl.h \
		../verror.h \
		../m_const.h \
		../gstring.h \
		../array.h \
		../v_user.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o s_fgl.o ../s_fgl.cpp

s_fgl1.o: ../s_fgl1.cpp ../verror.h \
		../s_fgl.h \
		../gstring.h \
		../array.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o s_fgl1.o ../s_fgl1.cpp

s_fgl2.o: ../s_fgl2.cpp ../s_fgl.h \
		../m_const.h \
		../verror.h \
		../v_user.h \
		../gstring.h \
		../array.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o s_fgl2.o ../s_fgl2.cpp

s_fgl3.o: ../s_fgl3.cpp ../verror.h \
		../s_fgl.h \
		../gstring.h \
		../array.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o s_fgl3.o ../s_fgl3.cpp

s_fgl4.o: ../s_fgl4.cpp ../verror.h \
		../s_fgl.h \
		../gstring.h \
		../array.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o s_fgl4.o ../s_fgl4.cpp

gstring.o: ../gstring.cpp ../gstring.h \
		../v_user.h \
		../array.h \
		../verror.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gstring.o ../gstring.cpp

main.o: main.cpp ../s_fgl.h

####### Install

install:  

uninstall:  

