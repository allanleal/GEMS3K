#############################################################################
# Makefile for building: gemipm2k
# Generated by qmake (1.07a) (Qt 3.3.6) on: Thu Jul 27 16:04:51 2006
# Project:  gemipm2k-sep.pro
# Template: app
# Command: $(QMAKE) -o Makefile gemipm2k-sep.pro
#############################################################################

####### Compiler, tools and options

CC       = pgCC
CXX      = pgCC
LEX      = flex
YACC     = yacc
CFLAGS   = -g  -DIPMGEMPLUGIN -O3 -D__unix
CXXFLAGS = -g  -DIPMGEMPLUGIN -O3 -D__unix
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  =  -I.
LINK     = pgCC
LFLAGS   = 
LIBS     = $(SUBLIBS)  
AR       = ar cqs
RANLIB   = 
MOC      = 
UIC      = 
QMAKE    = 
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = obj/

####### Files

HEADERS = array.h \
		verror.h \
		gstring.h \
		gdatastream.h \
		v_user.h \
		s_fgl.h \
		databr.h \
		datach.h \
		node.h \
		ms_multi.h \
		io_arrays.h \
		m_const.h \
		m_param.h \
		tnt_i_refvec.h \
		tnt_array1d.h \
		tnt_array2d.h \
		tnt.h \
		jama_cholesky.h \
		jama_lu.h \
		num_methods.h
SOURCES = gstring.cpp \
		gdatastream.cpp \
		num_methods.cpp \
		s_fgl.cpp \
		s_fgl2.cpp \
		node.cpp \
		node_format.cpp \
		ms_multi_file.cpp \
		ms_multi_format.cpp \
		ipm_chemical.cpp \
		ipm_chemical2.cpp \
		ipm_chemical3.cpp \
		ipm_main.cpp \
		ipm_simplex.cpp \
		io_arrays.cpp \
		main.cpp \
		ms_param.cpp
OBJECTS = obj/gstring.o \
		obj/gdatastream.o \
		obj/num_methods.o \
		obj/s_fgl.o \
		obj/s_fgl2.o \
		obj/node.o \
		obj/node_format.o \
		obj/ms_multi_file.o \
		obj/ms_multi_format.o \
		obj/ipm_chemical.o \
		obj/ipm_chemical2.o \
		obj/ipm_chemical3.o \
		obj/ipm_main.o \
		obj/ipm_simplex.o \
		obj/io_arrays.o \
		obj/main.o \
		obj/ms_param.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = 
OBJMOC = 
DIST	   = gemipm2k-sep.pro
QMAKE_TARGET = gemipm2k
DESTDIR  = 
TARGET   = gemipm2k

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: gemipm2k-sep.pro  
	$(QMAKE) -o Makefile gemipm2k-sep.pro
qmake: 
	@$(QMAKE) -o Makefile gemipm2k-sep.pro

dist: 
	@mkdir -p obj/gemipm2k && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) obj/gemipm2k/ && ( cd `dirname obj/gemipm2k` && $(TAR) gemipm2k.tar gemipm2k && $(GZIP) gemipm2k.tar ) && $(MOVE) `dirname obj/gemipm2k`/gemipm2k.tar.gz . && $(DEL_FILE) -r obj/gemipm2k

mocclean:
uiclean:

yaccclean:
lexclean:
clean:
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

obj/gstring.o: gstring.cpp gstring.h \
		array.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/gstring.o gstring.cpp

obj/gdatastream.o: gdatastream.cpp gdatastream.h \
		verror.h \
		gstring.h \
		array.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/gdatastream.o gdatastream.cpp

obj/num_methods.o: num_methods.cpp v_user.h \
		num_methods.h \
		verror.h \
		gstring.h \
		array.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/num_methods.o num_methods.cpp

obj/s_fgl.o: s_fgl.cpp s_fgl.h \
		m_const.h \
		verror.h \
		v_user.h \
		gstring.h \
		array.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/s_fgl.o s_fgl.cpp

obj/s_fgl2.o: s_fgl2.cpp s_fgl.h \
		m_const.h \
		verror.h \
		v_user.h \
		gstring.h \
		array.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/s_fgl2.o s_fgl2.cpp

#obj/m_gem2mtt.o: m_gem2mtt.cpp nodearray.h \
#		ms_gem2mt.h \
#		node.h \
#		m_param.h \
#		datach.h \
#		databr.h \
#		gdatastream.h \
#		ms_multi.h \
#		verror.h \
#		gstring.h \
#		array.h \
#		m_const.h \
#		v_user.h \
#		particlearray.h
#	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/m_gem2mtt.o m_gem2mtt.cpp

#obj/nodearray.o: nodearray.cpp particlearray.h \
#		nodearray.h \
#		gdatastream.h \
#		num_methods.h \
#		node.h \
#		m_param.h \
#		datach.h \
#		databr.h \
#		ms_multi.h \
#		verror.h \
#		gstring.h \
#		array.h \
#		m_const.h \
#		v_user.h
#	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/nodearray.o nodearray.cpp

obj/node.o: node.cpp node.h \
		gdatastream.h \
		m_param.h \
		datach.h \
		databr.h \
		ms_multi.h \
		verror.h \
		gstring.h \
		array.h \
		m_const.h \
		v_user.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/node.o node.cpp

obj/node_format.o: node_format.cpp io_arrays.h \
		node.h \
		gdatastream.h \
		gstring.h \
		array.h \
		m_param.h \
		datach.h \
		databr.h \
		ms_multi.h \
		verror.h \
		m_const.h \
		v_user.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/node_format.o node_format.cpp

#obj/particlearray.o: particlearray.cpp particlearray.h \
#		num_methods.h \
#		nodearray.h \
#		node.h \
#		m_param.h \
#		datach.h \
#		databr.h \
#		gdatastream.h \
#		ms_multi.h \
#		verror.h \
#		gstring.h \
#		array.h \
#		m_const.h \
#		v_user.h
#	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/particlearray.o particlearray.cpp

obj/ms_multi_file.o: ms_multi_file.cpp io_arrays.h \
		m_param.h \
		gdatastream.h \
		gstring.h \
		array.h \
		ms_multi.h \
		verror.h \
		m_const.h \
		v_user.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/ms_multi_file.o ms_multi_file.cpp

obj/ms_multi_format.o: ms_multi_format.cpp io_arrays.h \
		m_param.h \
		node.h \
		gstring.h \
		array.h \
		gdatastream.h \
		ms_multi.h \
		verror.h \
		m_const.h \
		v_user.h \
		datach.h \
		databr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/ms_multi_format.o ms_multi_format.cpp

obj/ipm_chemical.o: ipm_chemical.cpp m_param.h \
		gdatastream.h \
		ms_multi.h \
		verror.h \
		gstring.h \
		array.h \
		m_const.h \
		v_user.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/ipm_chemical.o ipm_chemical.cpp

obj/ipm_chemical2.o: ipm_chemical2.cpp m_param.h \
		gdatastream.h \
		ms_multi.h \
		verror.h \
		gstring.h \
		array.h \
		m_const.h \
		v_user.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/ipm_chemical2.o ipm_chemical2.cpp

obj/ipm_chemical3.o: ipm_chemical3.cpp m_param.h \
		s_fgl.h \
		gdatastream.h \
		ms_multi.h \
		verror.h \
		gstring.h \
		array.h \
		m_const.h \
		v_user.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/ipm_chemical3.o ipm_chemical3.cpp

obj/ipm_main.o: ipm_main.cpp m_param.h \
		jama_lu.h \
		jama_cholesky.h \
		node.h \
		gdatastream.h \
		ms_multi.h \
		verror.h \
		gstring.h \
		array.h \
		m_const.h \
		v_user.h \
		tnt.h \
		tnt_array1d.h \
		tnt_array2d.h \
		tnt_i_refvec.h \
		datach.h \
		databr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/ipm_main.o ipm_main.cpp

obj/ipm_simplex.o: ipm_simplex.cpp m_param.h \
		gdatastream.h \
		ms_multi.h \
		verror.h \
		gstring.h \
		array.h \
		m_const.h \
		v_user.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/ipm_simplex.o ipm_simplex.cpp

obj/io_arrays.o: io_arrays.cpp io_arrays.h \
		verror.h \
		gstring.h \
		array.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/io_arrays.o io_arrays.cpp

obj/main.o: main.cpp io_arrays.h \
		ms_gem2mt.h \
		gstring.h \
		array.h \
		particlearray.h \
		nodearray.h \
		node.h \
		m_param.h \
		datach.h \
		databr.h \
		gdatastream.h \
		ms_multi.h \
		verror.h \
		m_const.h \
		v_user.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/main.o main.cpp

obj/ms_param.o: ms_param.cpp m_param.h \
		num_methods.h \
		gdatastream.h \
		node.h \
		ms_multi.h \
		verror.h \
		gstring.h \
		array.h \
		m_const.h \
		v_user.h \
		datach.h \
		databr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/ms_param.o ms_param.cpp

####### Install

install:  

uninstall:  

